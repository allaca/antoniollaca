{"version":3,"sources":["assets/icons/down-arrow.svg","assets/icons/facebook.svg","assets/icons/twitter.svg","assets/icons/instagram.svg","components/dropdown/index.tsx","components/navbar/index.tsx","components/hamburger/index.tsx","components/button/index.tsx","components/event/index.tsx","components/upcoming_events/index.tsx","pages/events/index.tsx","App.tsx","pages/home/index.tsx","components/footer/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Dropdown","props","useState","state","open","setOpen","activeIndex","setActiveIndex","dispatch","useContext","LanguageSetStore","toggleOpen","className","onClick","options","alt","src","down","map","lang","i","action","handleClick","key","Navbar","to","Hamburger","width","ButtonType","Button","href","type","text","EventStatus","EventCardType","Event","FullWidth","title","place","details","dates","location","status","OnTrack","UpcomingEvents","events_json","event","Cancelled","position","slice","console","log","sort","a","b","Events","React","createContext","LanguageStore","languageReducer","App","useReducer","Provider","value","path","blurb","setBlurb","setTitle","useEffect","info","information","White","Gold","Home","target","rel","twitter","facebook","instagram","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4aff5ce6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow.cd7c3e4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.6494aad0.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.9546889d.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.99e3e6c8.svg\";","import React, { useState, useContext } from 'react';\nimport './index.scss';\nimport { LanguageSetStore } from '../../App'\nimport down from '../../assets/icons/down-arrow.svg'\n\ninterface DropdownProp {\n  options: String[];\n}\n\nexport default function Dropdown(props: DropdownProp) {\n  const [state, setState] = useState(props);\n  const [open, setOpen] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const dispatch = useContext(LanguageSetStore);\n  \n  function toggleOpen() {\n    setOpen(!open);\n  }\n  \n  function handleClick(i: number, lang: String) {\n    // @ts-ignore\n    dispatch({action: 'update', lang: lang});\n    setActiveIndex(i);\n    toggleOpen();\n  }\n  \n  return (\n    <div className=\"dd-wrapper\">\n      <div className=\"dd-header\">\n        <div className=\"dd-header-title\" onClick={toggleOpen}>\n          {state.options[activeIndex]}\n          <img alt=\"down arrow\" src={down} className={`${open?\"up\":\"down\"}`}/>\n        </div>\n        \n      </div>\n      <ul className={`dd-list ${open?\"show\":\"hide\"}`}>\n        {state.options.map((lang, i) => {\n          return <li className={`dd-list-item ${activeIndex === i?\"selected\":\"\"}`} onClick={() => handleClick(i, lang)} key={i}>{lang}</li>\n        })}\n      </ul>\n    </div>\n  );\n\n};\n","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\nimport Dropdown from '../dropdown';\n\nfunction Navbar() {\n  const [active, setActive] = useState('');\n  \n  return (\n    <div className=\"navbar\">\n      <nav className=\"navbar container\">\n        <div className=\"left\">\n          <Link to=\"/\">Antonio Llaca</Link>\n        </div>\n        <div className=\"right\">\n          <Link to=\"/about\">About</Link>\n          <Link to=\"/media\">Media</Link>\n          <Link to=\"/events\">Events</Link>\n          <Link to=\"/contact\">Contact</Link>\n          {Dropdown({\n            options: [\"EN\", \"FR\", \"SP\"]\n          })}\n        </div>\n      </nav>\n    </div>\n  );\n\n};\n\nexport default Navbar;\n\n","import React, { useState, useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\nimport Dropdown from '../dropdown';\nimport { slide as Menu } from 'react-burger-menu'\n\n\nfunction Hamburger() {  \n  return (\n    <div className=\"burger\">\n      <Menu width={ '60%' }>\n        <Link className=\"menu-item\" to=\"/about\">About</Link>\n        <Link className=\"menu-item\" to=\"/media\">Media</Link>\n        <Link className=\"menu-item\" to=\"/events\">Events</Link>\n        <Link className=\"menu-item\" to=\"/contact\">Contact</Link>\n        <Link className=\"menu-item\" to=\"#!\">\n          {Dropdown({\n            options: [\"EN\", \"FR\", \"SP\"]\n          })}\n        </Link>\n      </Menu>\n    </div>\n  );\n\n};\n\nexport default Hamburger;","import React, { useState } from 'react';\nimport './index.scss';\n\nenum ButtonType {\n  White=\"white\",\n  Gold=\"gold\"\n}\n\ninterface ButtonProp {\n  text: String;\n  href: string;\n  type: ButtonType;\n}\n\nexport default function Button(props: ButtonProp) {\n  const [state, setState] = useState(props);\n  \n  return (\n    <a href={state.href} className={`button ${state.type}`}>\n      {state.text}\n    </a>\n  );\n\n};\n\nexport {ButtonType, Button};\n\n","import React, { useState } from 'react';\nimport './index.scss';\n// import { LanguageSetStore } from '../../App'\n\nenum EventStatus {\n  OnTrack = \"On\",\n  Cancelled = \"Off\"\n}\n\nenum EventCardType {\n  Narrow = 0,\n  FullWidth = 1\n}\n\ninterface EventProp {\n  key: number;\n  title: String;\n  place: String;\n  details: String;\n  dates: String;\n  location: String;\n  status: EventStatus;\n  type? : EventCardType;\n  position: number;\n}\n\nexport default function Event(props: EventProp) {\n  const [state, setState] = useState(props);\n  \n  return (\n    <div className={`event ` + (state.type === EventCardType.FullWidth ? \"fullwidth\" : \"\")} key={state.key}>\n      <p className=\"title\">{state.title}</p>\n      <p className=\"place\">{state.place}</p>\n      <p className=\"details\">{state.details}</p>\n      <div className=\"dateLocation\">\n        <p className=\"dates\">{state.dates}</p>&nbsp;<span>|</span>&nbsp;<p className=\"location\">{state.location}</p>\n      </div>\n      <p className={`status ${state.status}`}>{state.status === EventStatus.OnTrack ? \"On Track\" : \"Cancelled\"}</p>\n    </div>\n  );\n\n};\n\nexport {EventStatus, EventCardType, Event};\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './index.scss';\nimport {Event, EventCardType, EventStatus} from '../event'\nimport events_json from '../../assets/events.json';\n\nconsole.log(events_json.sort(function(a, b) {\n      return (a.position - b.position);\n  }))\n\ninterface UpcomingEventsProp {\n  type? : EventCardType;\n}\n\nexport default function UpcomingEvents(props: UpcomingEventsProp) {\n  if(props.type === EventCardType.FullWidth){\n    return (\n      <div className=\"upcoming-events-wide container\">\n        <div className=\"header\">\n          <h1>Events</h1>\n        </div>\n        <div className=\"events-listing\">\n          {events_json.map((event, i) => {\n            return (\n              Event({\n                key: i,\n                title: event.title,\n                place: event.place,\n                details: event.details,\n                dates: event.dates,\n                location: event.location,\n                status: event.status === \"On\" ? EventStatus.OnTrack : EventStatus.Cancelled,\n                type: EventCardType.FullWidth,\n                position: event.position,\n              })\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"upcomingEvents\">\n      <div className=\"header\">\n        <h1>Upcoming Events</h1>\n        <Link to=\"events\">See all events</Link>\n      </div>\n      <div className=\"events-listing\">\n        {events_json.slice(0,3).map((event, i) => {\n          return (\n            Event({\n              key: i,\n              title: event.title,\n              place: event.place,\n              details: event.details,\n              dates: event.dates,\n              location: event.location,\n              status: event.status === \"On\" ? EventStatus.OnTrack : EventStatus.Cancelled,\n              position: event.position,\n            })\n          )\n        })}\n      </div>\n    </div>\n  );\n\n};\n\nexport {UpcomingEvents};\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport './index.scss';\nimport {LanguageStore} from '../../App';\nimport {Button, ButtonType} from '../../components/button';\nimport {EventCardType} from '../../components/event';\nimport {UpcomingEvents} from '../../components/upcoming_events';\n\ninterface EventsProp {\n  lang: String;\n}\n\nexport default function Events() {\n\n  return (\n  <div className=\"events container\">\n    {UpcomingEvents({type: EventCardType.FullWidth})}\n  </div>)\n}","import React, { useReducer, useEffect, useState } from 'react';\nimport './App.scss';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Navbar from './components/navbar';\nimport Hamburger from './components/hamburger';\nimport Footer from './components/footer';\n\nimport Home from './pages/home';\nimport Events from './pages/events';\n\nconst LanguageSetStore = React.createContext({});\nconst LanguageStore = React.createContext({});\n\nfunction languageReducer(\n  state: {lang: string}, \n  action: {type: string, lang: string}\n) {\n  switch (action.type) {\n    case 'update':\n      return {lang: action.lang};\n    default:\n      return {lang: action.lang}\n  }\n}\n\n\nexport default function App() {\n  let [state, dispatch] = useReducer(languageReducer, {lang: 'EN'});\n  \n  console.log(state.lang)\n  return (\n    <div className=\"app\">\n      <Router>\n        <LanguageStore.Provider value={state.lang}>\n          <LanguageSetStore.Provider value={dispatch}>\n            <Navbar />\n            <Hamburger />\n          </LanguageSetStore.Provider>\n              <Switch>\n                <Route path=\"/events\">\n                  <Events />\n                </Route>\n                <Route path=\"/\">\n                  {Home({lang: state.lang})}\n                </Route>\n              </Switch>\n          {Footer()}\n        </LanguageStore.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport {LanguageSetStore, LanguageStore, App};\n","import React, { useEffect, useState, useContext } from 'react';\nimport './index.scss';\nimport {LanguageStore} from '../../App';\nimport {Button, ButtonType} from '../../components/button';\nimport {UpcomingEvents} from '../../components/upcoming_events';\n\ninterface HomeProp {\n  lang: String;\n}\n\nfunction information(lang: String){\n  switch(lang){\n    case 'EN': \n       return [\"Choral conductor, teacher and clinician\", (\"Since 2009, Mr Llaca has conducted Coro Vivo Ottawa, and currently \" +\n       \"teaches choral and instrumental conducting at Carelton University. He \" +\n       \"is also a professor at the Conservatoire de Musique de Gatineau where he\" +\n       \"conducts the choirs and orchestra. He conducts the Chinese Children's \" +\n       \"Choir of Canada.\")];\n    case 'FR': \n      return [\"Chef de chœur, enseignant et clinicien\", (\"Depuis 2009, M. Llaca \"+\n              \"dirige Coro Vivo Ottawa et enseigne\" +\n              \"actuellement la direction chorale et instrumentale à l'Université\" +\n              \"Carelton. Il est également professeur au Conservatoire de Musique\" +\n              \"de Gatineau où il dirige les chorales et l'orchestre. Il dirige\" +\n              \"le Chinese Children's Choir of Canada.\")];\n    case 'SP': \n      return [\"Director de coro, profesor y clínico.\", \"Desde 2009, el Sr. Llaca \" +\n      \"ha dirigido Coro Vivo Ottawa, y actualmente enseña dirección coral e \"+\n      \"instrumental en la Universidad de Carelton. También es profesor en el \"+\n      \"Conservatorio de Música de Gatineau, donde dirige los coros y la orquesta. \"+\n      \"Dirige el coro de niños chinos de Canadá.\"]\n    default: \n      return [\"\", \"\"];\n  }\n}\n\nexport default function Home(props: HomeProp) {\n  const [blurb, setBlurb] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  \n  useEffect(() => {\n    let info = information(props.lang);\n    setTitle(info[0]);\n    setBlurb(info[1]);\n  }, [props.lang]);\n\n  return (\n  <div className=\"home\">\n    <div className=\"blurb\">\n      <div className=\"container\">\n        <h1 className=\"text-container\">{title}</h1>\n        <p className=\"text-container\">{blurb}</p>\n        <div className=\"buttons text-container\">\n          {Button({\n            text: \"Events\",\n            href: \"events\",\n            type: ButtonType.White\n          })}\n          {Button({\n            text: \"Contact\",\n            href: \"contact\",\n            type: ButtonType.Gold\n          })}\n        </div>\n      </div>\n    </div>\n    <div className=\"container\">\n      {UpcomingEvents({})}\n    </div>\n  </div>)\n}","import React from 'react';\nimport './index.scss';\nimport facebook from '../../assets/icons/facebook.svg';\nimport twitter from '../../assets/icons/twitter.svg';\nimport instagram from '../../assets/icons/instagram.svg';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <footer className=\"footer-content\">\n        <a href=\"https://twitter.com/antonioconduct\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={twitter} alt=\"twitter logo\" />\n        </a>\n        <a href=\"https://www.facebook.com/antonioconducts\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={facebook} alt=\"facebook logo\" />\n        </a>\n        <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={instagram} alt=\"instagram logo\" />\n        </a>\n      </footer>\n    </div>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}